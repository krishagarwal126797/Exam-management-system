<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Results</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            display: flex;
            background: linear-gradient(to right, #141E30, #243B55);
            transition: 0.3s;
            overflow-x: hidden;
            min-height: 100vh;
            color: white;
        }

        .close-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 20px;
            color: white;
            cursor: pointer;
            transition: 0.3s;
        }

        .close-btn:hover {
            color: #ff4b2b;
        }

        .sidebar {
            width: 250px;
            height: 100vh;
            background: rgba(17, 15, 68, 0.1);
            backdrop-filter: blur(10px);
            position: fixed;
            left: -250px;
            padding: 20px;
            z-index: 1;
            transition: all 0.4s ease-in-out;
            border-right: 2px solid rgba(255, 255, 255, 0.3);
        }

        .sidebar.active {
            left: 0;
        }

        .sidebar .logo {
            color: #fff;
            position: relative;
            top: 10px;
            font-size: 22px;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .sidebar ul {
            list-style: none;
        }

        .sidebar ul li {
            padding: 15px 10px;
            color: #ddd;
            cursor: pointer;
            display: flex;
            align-items: center;
            transition: 0.3s;
            border-radius: 5px;
        }

        .sidebar ul li a {
            color: #ddd;
            text-decoration: none;
        }

        .sidebar ul li i {
            width: 30px;
        }

        .sidebar ul li.active,
        .sidebar ul li:hover {
            background: rgba(255, 255, 255, 0.2);
            color: #fff;
            transform: translateX(10px);
        }

        .toggle-btn {
            position: absolute;
            left: 20px;
            top: 30px;
            cursor: pointer;
            font-size: 24px;
            z-index: 1000;
            color: #fff;
            transition: 0.3s;
        }

        .toggle-btn:hover {
            transform: rotate(90deg);
        }

        .dashboard-content {
            margin-left: 0;
            padding: 20px;
            width: 100%;
            transition: 0.4s;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .results-table {
            width: 100%;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            margin-bottom: 20px;
        }

        .results-table table {
            width: 100%;
            border-collapse: collapse;
            color: white;
        }

        .results-table th, .results-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid rgba(255, 255, 255, 0.3);
        }
 option{
  color:black;
 }
        .modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.9);
            padding: 20px;
            border-radius: 10px;
            width: 400px;
            color: white;
            text-align: center;
            z-index: 1000;
            box-shadow: 0 4px 10px rgba(255, 255, 255, 0.3);
        }

        .modal input, .modal select {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            border: none;
            font-size: 16px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
        }

        .modal input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .modal input:focus, .modal select:focus {
            outline: 2px solid rgba(255, 255, 255, 0.5);
            background: rgba(255, 255, 255, 0.3);
        }

        .modal button {
            padding: 10px;
            border: none;
            cursor: pointer;
            margin-top: 10px;
            width: 100%;
            background: linear-gradient(to right, #ff416c, #ff4b2b);
            color: white;
            border-radius: 5px;
            font-size: 16px;
            transition: 0.3s;
        }

        .modal button:hover {
            background: linear-gradient(to right, #ff4b2b, #ff416c);
        }

        button {
            width: 70px;
            height: 30px;
            border-radius: 7px;
            border: none;
            cursor: pointer;
            margin: 5px;
        }

        button:hover {
            transform: scale(1.1);
        }

        .search-bar {
            width: 100%;
            padding: 15px;
            margin-bottom: 20px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .search-bar input, .search-bar select {
            flex: 1;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.3);
            color: white;
            font-size: 16px;
        }

        .search-bar input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .search-bar input:focus, .search-bar select:focus {
            outline: none;
            background: rgba(255, 255, 255, 0.4);
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 15px 25px;
            background: rgba(0, 0, 0, 0.9);
            color: white;
            border-radius: 5px;
            transform: translateY(100px);
            opacity: 0;
            transition: all 0.3s;
        }

        .toast.show {
            transform: translateY(0);
            opacity: 1;
        }

        .toast.success {
            border-left: 4px solid #4CAF50;
        }

        .toast.error {
            border-left: 4px solid #f44336;
        }

        .analytics-section {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
            margin-bottom: 20px;
        }

        .chart-container {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .grade-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-weight: bold;
        }

        .grade-A {
            background-color: #4CAF50;
        }

        .grade-B {
            background-color: #2196F3;
        }

        .grade-C {
            background-color: #FF9800;
        }

        .grade-D {
            background-color: #f44336;
        }

        .grade-F {
            background-color: #9C27B0;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <span class="close-btn"><i class="fa fa-times"></i></span>
        <div class="logo" style="position: relative; left: 30px;">Exam Manager</div>
        <ul>
            <li><a href="dashboard"><i class="fa fa-tachometer-alt"></i> Dashboard</a></li>
            <li><a href="manageexams"><i class="fa fa-file-alt"></i> Manage Exams</a></li>
            <li><a href="managestudents"><i class="fa fa-users"></i> Students</a></li>
            <li class="active"><i class="fa fa-chart-bar"></i> Results</li>
            <li><i class="fa fa-cogs"></i> Settings</li>
        </ul>
    </div>

    <div class="toggle-btn"><i class="fa fa-bars"></i></div>
    <div class="dashboard-content">
        <div class="header">
            <h2 style="position: relative; left: 30px;">Manage Results</h2>
            <div>
                <button onclick="openModal()" style="background-color: forestgreen; color: #fff;">+ Add Result</button>
                <i class="fa fa-moon dark-mode-toggle" onclick="toggleDarkMode()"></i>
            </div>
        </div>

        <div class="search-bar">
            <input type="text" id="searchResult" placeholder="Search by student name or exam...">
            <select id="filterExam">
                <option value="">All Exams</option>
                <option value="Math Test">Math Test</option>
                <option value="Science Quiz">Science Quiz</option>
                <option value="English Test">English Test</option>
            </select>
            <select id="filterGrade">
                <option value="">All Grades</option>
                <option value="A">Grade A</option>
                <option value="B">Grade B</option>
                <option value="C">Grade C</option>
                <option value="D">Grade D</option>
                <option value="F">Grade F</option>
            </select>
        </div>

        <div class="analytics-section">
            <div class="chart-container">
                <canvas id="gradeDistribution"></canvas>
            </div>
            <div class="chart-container">
                <canvas id="examPerformance"></canvas>
            </div>
        </div>

        <div class="results-table">
            <table>
                <thead>
                    <tr>
                        <th class="sortable" data-sort="student">Student Name</th>
                        <th class="sortable" data-sort="exam">Exam Name</th>
                        <th class="sortable" data-sort="marks">Marks</th>
                        <th class="sortable" data-sort="grade">Grade</th>
                        <th class="sortable" data-sort="date">Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="resultTableBody">
                    <tr>
                        <td>John Doe</td>
                        <td>Math Test</td>
                        <td>85</td>
                        <td><span class="grade-badge grade-A">A</span></td>
                        <td>2024-03-05</td>
                        <td>
                            <button onclick="viewResult(this)" style="background-color: #4CAF50; color: #fff;">View</button>
                            <button onclick="editResult(this)" style="background-color: rgb(253, 221, 42); color: #fff;">Edit</button>
                            <button onclick="confirmDelete(this)" style="background-color: rgb(252, 48, 48); color: #fff;">Delete</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="modal" id="resultModal">
        <h3 id="modalTitle">Add Result</h3>
        <form id="resultForm" onsubmit="handleResultSubmit(event)">
            <select id="studentSelect" required>
                <option value="">Select Student</option>
                <option value="John Doe">John Doe</option>
                <option value="Jane Smith">Jane Smith</option>
            </select>
            <div class="error-message" id="studentError"></div>

            <select id="examSelect" required>
                <option value="">Select Exam</option>
                <option value="Math Test">Math Test</option>
                <option value="Science Quiz">Science Quiz</option>
                <option value="English Test">English Test</option>
            </select>
            <div class="error-message" id="examError"></div>

            <input type="number" id="marks" placeholder="Marks Obtained" min="0" max="100" required>
            <div class="error-message" id="marksError"></div>

            <input type="date" id="examDate" required>
            <div class="error-message" id="dateError"></div>

            <button type="submit" id="submitBtn">Add</button>
            <button type="button" onclick="closeModal()">Cancel</button>
        </form>
    </div>

    <div class="toast" id="toast"></div>

    <script>
        let currentSort = { column: '', direction: 'asc' };
        let resultToDelete = null;
        let editingRow = null;

        // Initialize charts
        function initializeCharts() {
            // Grade Distribution Chart
            const gradeCtx = document.getElementById('gradeDistribution').getContext('2d');
            new Chart(gradeCtx, {
                type: 'pie',
                data: {
                    labels: ['A', 'B', 'C', 'D', 'F'],
                    datasets: [{
                        data: [30, 25, 20, 15, 10],
                        backgroundColor: [
                            '#4CAF50',
                            '#2196F3',
                            '#FF9800',
                            '#f44336',
                            '#9C27B0'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Grade Distribution',
                            color: 'white'
                        },
                        legend: {
                            labels: {
                                color: 'white'
                            }
                        }
                    }
                }
            });

            // Exam Performance Chart
            const examCtx = document.getElementById('examPerformance').getContext('2d');
            new Chart(examCtx, {
                type: 'bar',
                data: {
                    labels: ['Math Test', 'Science Quiz', 'English Test'],
                    datasets: [{
                        label: 'Average Score',
                        data: [75, 82, 68],
                        backgroundColor: 'rgba(33, 150, 243, 0.5)',
                        borderColor: '#2196F3',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            ticks: {
                                color: 'white'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        },
                        x: {
                            ticks: {
                                color: 'white'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'Exam Performance',
                            color: 'white'
                        },
                        legend: {
                            labels: {
                                color: 'white'
                            }
                        }
                    }
                }
            });
        }

        function calculateGrade(marks) {
            if (marks >= 90) return 'A';
            if (marks >= 80) return 'B';
            if (marks >= 70) return 'C';
            if (marks >= 60) return 'D';
            return 'F';
        }

        function toggleDarkMode() {
            document.body.classList.toggle("dark-mode");
            localStorage.setItem("theme", document.body.classList.contains("dark-mode") ? "dark" : "light");
        }

        function showToast(message, type = 'success') {
            const toast = document.getElementById('toast');
            toast.textContent = message;
            toast.className = `toast ${type}`;
            toast.classList.add('show');
            setTimeout(() => toast.classList.remove('show'), 3000);
        }

        function validateForm() {
            const marks = document.getElementById('marks').value;
            const date = document.getElementById('examDate').value;
            let isValid = true;

            if (marks < 0 || marks > 100) {
                document.getElementById('marksError').textContent = 'Marks must be between 0 and 100';
                document.getElementById('marksError').style.display = 'block';
                isValid = false;
            }

            const selectedDate = new Date(date);
            const today = new Date();
            if (selectedDate > today) {
                document.getElementById('dateError').textContent = 'Date cannot be in the future';
                document.getElementById('dateError').style.display = 'block';
                isValid = false;
            }

            return isValid;
        }

        function handleResultSubmit(event) {
            event.preventDefault();
            if (!validateForm()) return;

            const student = document.getElementById('studentSelect').value;
            const exam = document.getElementById('examSelect').value;
            const marks = document.getElementById('marks').value;
            const date = document.getElementById('examDate').value;
            const grade = calculateGrade(marks);

            if (editingRow) {
                updateResult(student, exam, marks, grade, date);
            } else {
                addResult(student, exam, marks, grade, date);
            }
        }

        function addResult(student, exam, marks, grade, date) {
            const table = document.querySelector('#resultTableBody');
            const row = `<tr>
                <td>${student}</td>
                <td>${exam}</td>
                <td>${marks}</td>
                <td><span class="grade-badge grade-${grade}">${grade}</span></td>
                <td>${date}</td>
                <td>
                    <button onclick="viewResult(this)" style="background-color: #4CAF50; color: #fff;">View</button>
                    <button onclick="editResult(this)" style="background-color: rgb(253, 221, 42); color: #fff;">Edit</button>
                    <button onclick="confirmDelete(this)" style="background-color: rgb(252, 48, 48); color: #fff;">Delete</button>
                </td>
            </tr>`;
            table.innerHTML += row;
            closeModal();
            showToast('Result added successfully');
        }

        function updateResult(student, exam, marks, grade, date) {
            const cells = editingRow.getElementsByTagName('td');
            cells[0].textContent = student;
            cells[1].textContent = exam;
            cells[2].textContent = marks;
            cells[3].innerHTML = `<span class="grade-badge grade-${grade}">${grade}</span>`;
            cells[4].textContent = date;
            editingRow = null;
            document.getElementById('modalTitle').textContent = 'Add Result';
            document.getElementById('submitBtn').textContent = 'Add';
            closeModal();
            showToast('Result updated successfully');
        }

        function viewResult(button) {
            const row = button.closest('tr');
            const cells = row.getElementsByTagName('td');
            const resultInfo = {
                student: cells[0].textContent,
                exam: cells[1].textContent,
                marks: cells[2].textContent,
                grade: cells[3].textContent,
                date: cells[4].textContent
            };
            
            alert(`Result Details:\n\nStudent: ${resultInfo.student}\nExam: ${resultInfo.exam}\nMarks: ${resultInfo.marks}\nGrade: ${resultInfo.grade}\nDate: ${resultInfo.date}`);
        }

        function editResult(button) {
            editingRow = button.closest('tr');
            const cells = editingRow.getElementsByTagName('td');
            
            document.getElementById('studentSelect').value = cells[0].textContent;
            document.getElementById('examSelect').value = cells[1].textContent;
            document.getElementById('marks').value = cells[2].textContent;
            document.getElementById('examDate').value = cells[4].textContent;
            
            document.getElementById('modalTitle').textContent = 'Edit Result';
            document.getElementById('submitBtn').textContent = 'Update';
            openModal();
        }

        function confirmDelete(button) {
            resultToDelete = button.closest('tr');
            const studentName = resultToDelete.cells[0].textContent;
            const examName = resultToDelete.cells[1].textContent;
            if (confirm(`Are you sure you want to delete the result for ${studentName} in ${examName}?`)) {
                deleteResult();
            }
        }

        function deleteResult() {
            if (resultToDelete) {
                resultToDelete.remove();
                showToast('Result deleted successfully');
            }
            resultToDelete = null;
        }

        function openModal() {
            document.getElementById('resultModal').style.display = 'block';
            document.querySelectorAll('.error-message').forEach(err => err.style.display = 'none');
        }

        function closeModal() {
            document.getElementById('resultModal').style.display = 'none';
            document.getElementById('resultForm').reset();
            editingRow = null;
            document.getElementById('modalTitle').textContent = 'Add Result';
            document.getElementById('submitBtn').textContent = 'Add';
        }

        // Search and filter functionality
        document.getElementById('searchResult').addEventListener('input', filterTable);
        document.getElementById('filterExam').addEventListener('change', filterTable);
        document.getElementById('filterGrade').addEventListener('change', filterTable);

        function filterTable() {
            const searchText = document.getElementById('searchResult').value.toLowerCase();
            const examFilter = document.getElementById('filterExam').value;
            const gradeFilter = document.getElementById('filterGrade').value;
            const rows = document.getElementById('resultTableBody').getElementsByTagName('tr');

            for (let row of rows) {
                const student = row.cells[0].textContent.toLowerCase();
                const exam = row.cells[1].textContent;
                const grade = row.cells[3].textContent;
                
                const textMatch = student.includes(searchText);
                const examMatch = !examFilter || exam === examFilter;
                const gradeMatch = !gradeFilter || grade === gradeFilter;
                
                row.style.display = textMatch && examMatch && gradeMatch ? '' : 'none';
            }
        }

        // Initialize
        window.onload = () => {
            if (localStorage.getItem("theme") === "dark") {
                document.body.classList.add("dark-mode");
            }
            initializeCharts();
        };

        $('.toggle-btn').click(() => $('.sidebar').toggleClass('active'));
        $('.close-btn').click(() => {
            $('.sidebar').removeClass('active');
            $('.dashboard-content').removeClass('shifted');
        });
    </script>
</body>
</html>