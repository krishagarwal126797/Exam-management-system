<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Exams</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        * {
            
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            display: flex;
            background: linear-gradient(to right, #141E30, #243B55);
            transition: 0.3s;
            overflow-x: hidden;
            min-height: 100vh;
            color: white;
        }
        .close-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 20px;
            color: white;
            cursor: pointer;
            transition: 0.3s;
        }

        .close-btn:hover {
            color: #ff4b2b;
        }
        /* Sidebar */
        .sidebar {
            width: 250px;
            height: 100vh;
            background: rgba(17, 15, 68, 0.1);
            backdrop-filter: blur(10px);
            position: fixed;
            left: -250px;
            padding: 20px;
            z-index: 1;
            transition: all 0.4s ease-in-out;
            border-right: 2px solid rgba(255, 255, 255, 0.3);
        }

        .sidebar.active {
            left: 0;
        }

        .sidebar .logo {
            color: #fff;
             position: relative;
             top: 10px;
            font-size: 22px;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .sidebar ul {
            list-style: none;
        }

        .sidebar ul li  {
            padding: 15px 10px;
            color: #ddd;
            cursor: pointer;
            display: flex;
            align-items: center;
            transition: 0.3s;
            border-radius: 5px;
        }
.sidebar ul li a{
  color: #ddd;
  text-decoration: none;
}
        .sidebar ul li i {
            width: 30px;
        }

        .sidebar ul li.active,
        .sidebar ul li:hover {
            background: rgba(255, 255, 255, 0.2);
            color: #fff;
            transform: translateX(10px);
        }
        .dark-mode {
            background: #1a1a2e;
            color: #fff;
        }

        .dark-mode .exam-table, 
        .dark-mode .header {
            background: rgba(255, 255, 255, 0.1);
        }

        .toggle-btn {
            position: absolute;
            left: 20px;
            top: 30px;
            cursor: pointer;
            font-size: 24px;
            z-index: 1000;
            color: #fff;
            transition: 0.3s;
        }

        .toggle-btn:hover {
            transform: rotate(90deg);
        }

        .dashboard-content {
            margin-left: 0;
            padding: 20px;
            width: 100%;
            transition: 0.4s;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .exam-table {
            width: 100%;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .exam-table table {
            width: 100%;
            border-collapse: collapse;
            color: white;
        }

        .exam-table th, .exam-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid rgba(255, 255, 255, 0.3);
        }

        .modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.9);
            padding: 20px;
            border-radius: 10px;
            width: 350px;
            color: white;
            text-align: center;
            z-index: 1000;
            box-shadow: 0 4px 10px rgba(255, 255, 255, 0.3);
        }

        .modal input {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            border: none;
            font-size: 16px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
        }

        .modal input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .modal input:focus {
            outline: 2px solid rgba(255, 255, 255, 0.5);
            background: rgba(255, 255, 255, 0.3);
        }

        .modal button {
            padding: 10px;
            border: none;
            cursor: pointer;
            margin-top: 10px;
            width: 100%;
            background: linear-gradient(to right, #ff416c, #ff4b2b);
            color: white;
            border-radius: 5px;
            font-size: 16px;
            transition: 0.3s;
        }

        .modal button:hover {
            background: linear-gradient(to right, #ff4b2b, #ff416c);
        }
        button{
          width: 70px;
          height: 30px;
          border-radius: 7px;
          border: none;
          cursor: pointer;
          margin: 5px;
        }
        button:hover{
          transform: scale(1.1);
        }

        .search-bar {
            width: 100%;
            padding: 15px;
            margin-bottom: 20px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .search-bar input {
            flex: 1;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.3);
            color: white;
            font-size: 16px;
        }

        .search-bar input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .search-bar input:focus {
            outline: none;
            background: rgba(255, 255, 255, 0.4);
        }

        .sortable {
            cursor: pointer;
            position: relative;
            padding-right: 20px;
        }

        .sortable:after {
            content: 'â†•';
            position: absolute;
            right: 5px;
            opacity: 0.5;
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 15px 25px;
            background: rgba(0, 0, 0, 0.9);
            color: white;
            border-radius: 5px;
            transform: translateY(100px);
            opacity: 0;
            transition: all 0.3s;
        }

        .toast.show {
            transform: translateY(0);
            opacity: 1;
        }

        .toast.success {
            border-left: 4px solid #4CAF50;
        }

        .toast.error {
            border-left: 4px solid #f44336;
        }

        .confirm-modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.9);
            padding: 20px;
            border-radius: 10px;
            width: 300px;
            color: white;
            text-align: center;
            z-index: 1000;
        }

        .confirm-modal .buttons {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        .confirm-modal button {
            flex: 1;
        }

        .error-message {
            color: #ff4b2b;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
    </style>
</head>
<body>
  <div class="sidebar">
    <span class="close-btn"><i class="fa fa-times"></i></span>
    
      <div class="logo" style="position: relative; left: 30px;">Exam Manager</div>
      <ul>
          <li><a href="dashboard" ><i class="fa fa-tachometer-alt" ></i> Dashboard</a></li>
          <li class="active"><i class="fa fa-file-alt"></i> Manage Exams</li>
          <li><i class="fa fa-users"></i> Students</li>
          <li><i class="fa fa-chart-bar"></i> Results</li>
          <li><i class="fa fa-cogs"></i> Settings</li>
      </ul>
  </div>
    <div class="toggle-btn"><i class="fa fa-bars"></i></div>
    <div class="dashboard-content">
        <div class="header">
            <h2 style="position: relative; left: 30px;">Manage Exams</h2>
            <div>
                <button onclick="openModal()" style="background-color: forestgreen; color: #fff; font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;">+ Add Exam</button>
                <i class="fa fa-moon dark-mode-toggle" onclick="toggleDarkMode()"></i>
            </div>
        </div>

        <div class="search-bar">
            <input type="text" id="searchExam" placeholder="Search exams...">
            <select id="filterDuration">
                <option value="">All Durations</option>
                <option value="1">1 Hour</option>
                <option value="2">2 Hours</option>
                <option value="3">3 Hours</option>
            </select>
        </div>

        <div class="exam-table">
            <table>
                <thead>
                    <tr>
                        <th class="sortable" data-sort="name">Exam Name</th>
                        <th class="sortable" data-sort="date">Date</th>
                        <th class="sortable" data-sort="duration">Duration</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="examTableBody">
                    <tr>
                        <td>Math Test</td>
                        <td>2024-03-05</td>
                        <td>2 Hours</td>
                        <td>
                            <button onclick="editExam(this)" style="background-color: rgb(253, 221, 42); color: #fff;">Edit</button>
                            <button onclick="confirmDelete(this)" style="background-color: rgb(252, 48, 48); color: #fff;">Delete</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="modal" id="examModal">
        <h3 id="modalTitle">Add Exam</h3>
        <form id="examForm" onsubmit="handleExamSubmit(event)">
            <input type="text" placeholder="Exam Name" id="examName" required>
            <div class="error-message" id="nameError"></div>
            <input type="date" id="examDate" required>
            <div class="error-message" id="dateError"></div>
            <input type="text" placeholder="Duration (e.g., 2 Hours)" id="examDuration" required>
            <div class="error-message" id="durationError"></div>
            <button type="submit" id="submitBtn">Add</button>
            <button type="button" onclick="closeModal()">Cancel</button>
        </form>
    </div>

    <div class="confirm-modal" id="confirmModal">
        <h3>Delete Exam</h3>
        <p>Are you sure you want to delete this exam?</p>
        <div class="buttons">
            <button onclick="deleteExam()" style="background-color: rgb(252, 48, 48);">Delete</button>
            <button onclick="closeConfirmModal()">Cancel</button>
        </div>
    </div>

    <div class="toast" id="toast"></div>

    <script>
        let currentSort = { column: '', direction: 'asc' };
        let examToDelete = null;
        let editingRow = null;

        function toggleDarkMode() {
            document.body.classList.toggle("dark-mode");
            localStorage.setItem("theme", document.body.classList.contains("dark-mode") ? "dark" : "light");
        }

        function showToast(message, type = 'success') {
            const toast = document.getElementById('toast');
            toast.textContent = message;
            toast.className = `toast ${type}`;
            toast.classList.add('show');
            setTimeout(() => toast.classList.remove('show'), 3000);
        }

        function validateForm() {
            const name = document.getElementById('examName').value;
            const date = document.getElementById('examDate').value;
            const duration = document.getElementById('examDuration').value;
            let isValid = true;

            if (name.length < 3) {
                document.getElementById('nameError').textContent = 'Name must be at least 3 characters';
                document.getElementById('nameError').style.display = 'block';
                isValid = false;
            }

            const selectedDate = new Date(date);
            const today = new Date();
            if (selectedDate < today) {
                document.getElementById('dateError').textContent = 'Date cannot be in the past';
                document.getElementById('dateError').style.display = 'block';
                isValid = false;
            }

            if (!duration.match(/^\d+\s*(Hour|Hours)$/i)) {
                document.getElementById('durationError').textContent = 'Duration must be in format: X Hours';
                document.getElementById('durationError').style.display = 'block';
                isValid = false;
            }

            return isValid;
        }

        function handleExamSubmit(event) {
            event.preventDefault();
            if (!validateForm()) return;

            const name = document.getElementById('examName').value;
            const date = document.getElementById('examDate').value;
            const duration = document.getElementById('examDuration').value;

            if (editingRow) {
                updateExam(name, date, duration);
            } else {
                addExam(name, date, duration);
            }
        }

        function addExam(name, date, duration) {
            const table = document.querySelector('#examTableBody');
                const row = `<tr>
                    <td>${name}</td>
                    <td>${date}</td>
                    <td>${duration}</td>
                <td>
                    <button onclick="editExam(this)" style="background-color: rgb(253, 221, 42); color: #fff;">Edit</button>
                    <button onclick="confirmDelete(this)" style="background-color: rgb(252, 48, 48); color: #fff;">Delete</button>
                </td>
                </tr>`;
                table.innerHTML += row;
                closeModal();
            showToast('Exam added successfully');
        }

        function updateExam(name, date, duration) {
            const cells = editingRow.getElementsByTagName('td');
            cells[0].textContent = name;
            cells[1].textContent = date;
            cells[2].textContent = duration;
            editingRow = null;
            document.getElementById('modalTitle').textContent = 'Add Exam';
            document.getElementById('submitBtn').textContent = 'Add';
            closeModal();
            showToast('Exam updated successfully');
        }

        function editExam(button) {
            editingRow = button.closest('tr');
            const cells = editingRow.getElementsByTagName('td');
            
            document.getElementById('examName').value = cells[0].textContent;
            document.getElementById('examDate').value = cells[1].textContent;
            document.getElementById('examDuration').value = cells[2].textContent;
            
            document.getElementById('modalTitle').textContent = 'Edit Exam';
            document.getElementById('submitBtn').textContent = 'Update';
            openModal();
        }

        function confirmDelete(button) {
            examToDelete = button.closest('tr');
            document.getElementById('confirmModal').style.display = 'block';
        }

        function deleteExam() {
            if (examToDelete) {
                examToDelete.remove();
                showToast('Exam deleted successfully');
            }
            closeConfirmModal();
        }

        function closeConfirmModal() {
            document.getElementById('confirmModal').style.display = 'none';
            examToDelete = null;
        }

        function openModal() {
            document.getElementById('examModal').style.display = 'block';
            document.querySelectorAll('.error-message').forEach(err => err.style.display = 'none');
        }

        function closeModal() {
            document.getElementById('examModal').style.display = 'none';
            document.getElementById('examForm').reset();
            editingRow = null;
            document.getElementById('modalTitle').textContent = 'Add Exam';
            document.getElementById('submitBtn').textContent = 'Add';
        }

        // Search and filter functionality
        document.getElementById('searchExam').addEventListener('input', filterTable);
        document.getElementById('filterDuration').addEventListener('change', filterTable);

        function filterTable() {
            const searchText = document.getElementById('searchExam').value.toLowerCase();
            const durationFilter = document.getElementById('filterDuration').value;
            const rows = document.getElementById('examTableBody').getElementsByTagName('tr');

            for (let row of rows) {
                const name = row.cells[0].textContent.toLowerCase();
                const duration = row.cells[2].textContent;
                const durationHours = parseInt(duration);
                
                const nameMatch = name.includes(searchText);
                const durationMatch = !durationFilter || durationHours === parseInt(durationFilter);
                
                row.style.display = nameMatch && durationMatch ? '' : 'none';
            }
        }

        // Sorting functionality
        document.querySelectorAll('.sortable').forEach(header => {
            header.addEventListener('click', () => {
                const column = header.dataset.sort;
                const direction = currentSort.column === column && currentSort.direction === 'asc' ? 'desc' : 'asc';
                sortTable(column, direction);
                currentSort = { column, direction };
            });
        });

        function sortTable(column, direction) {
            const tbody = document.getElementById('examTableBody');
            const rows = Array.from(tbody.getElementsByTagName('tr'));
            
            rows.sort((a, b) => {
                let aValue = a.cells[getColumnIndex(column)].textContent;
                let bValue = b.cells[getColumnIndex(column)].textContent;
                
                if (column === 'date') {
                    aValue = new Date(aValue);
                    bValue = new Date(bValue);
                }
                
                if (aValue < bValue) return direction === 'asc' ? -1 : 1;
                if (aValue > bValue) return direction === 'asc' ? 1 : -1;
                return 0;
            });
            
            rows.forEach(row => tbody.appendChild(row));
        }

        function getColumnIndex(column) {
            const columns = { name: 0, date: 1, duration: 2 };
            return columns[column];
        }

        // Initialize
        window.onload = () => {
            if (localStorage.getItem("theme") === "dark") {
                document.body.classList.add("dark-mode");
            }
        };

        $('.toggle-btn').click(() => $('.sidebar').toggleClass('active'));
        $('.close-btn').click(() => {
            $('.sidebar').removeClass('active');
            $('.dashboard-content').removeClass('shifted');
        });
    </script>
</body>
</html>
